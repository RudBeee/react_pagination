{"version":3,"sources":["components/Pagination/Pagination.tsx","App.tsx","utils.ts","index.tsx"],"names":["Pagination","total","perPage","currentPage","onPageChange","visiblePage","Math","ceil","items","Array","from","length","_","index","visibleItems","className","classNames","disabled","href","onClick","map","elem","active","e","currentTarget","innerHTML","item","maxVisiblePage","to","numbers","n","push","getNumbers","App","useState","setPerPage","setCurrentPage","perPageValue","page","maxNumberOfPages","itemsPeriod","id","value","onChange","target","htmlFor","ReactDOM","render","document","getElementById"],"mappings":"oNAWaA,EAA8B,SAAC,GAItC,IAFFC,EAEC,EAFDA,MAAOC,EAEN,EAFMA,QAASC,EAEf,EAFeA,YAAaC,EAE5B,EAF4BA,aAGzBC,EAAcC,KAAKC,KAAKN,EAAQC,GAChCM,EAAQC,MAAMC,KAAK,CAAEC,OAAQN,IAAe,SAACO,EAAGC,GAAJ,OAAcA,EAAQ,KAClEC,EAAeL,MAAMC,KAAK,CAAEC,OAAQV,IAAS,SAACW,EAAGC,GAAJ,OAAcA,EAAQ,KAEzE,OACE,qCACE,qBAAIE,UAAU,aAAd,UACE,oBACEA,UACEC,IAAW,YACT,CAAEC,SAA0B,IAAhBd,IAHlB,SAME,mBACE,UAAQ,WACRY,UAAU,YACVG,KAAK,QACLC,QAAS,WACHhB,EAAc,GAChBC,EAAaD,EAAc,IAG/B,gBAA+B,IAAhBA,EATjB,oBAeDK,EAAMY,KAAI,SAACC,GACV,OACE,oBACEN,UACEC,IACE,YACA,CAAEM,OAAQnB,IAAgBkB,IAJhC,SASE,mBACEF,QAAS,SAAAI,GACPnB,GAAcmB,EAAEC,cAAcC,YAEhC,UAAQ,WACRV,UAAU,YACVG,KAAI,WAAMG,GANZ,SAQGA,KAVEA,MAeX,oBACEN,UACEC,IACE,YACA,CAAEC,SAAUd,IAAgBE,IAJlC,SAQE,mBACE,UAAQ,WACRU,UAAU,YACVG,KAAK,QACLC,QAAS,WACHhB,IAAgBE,GAIpBD,EAAaD,EAAc,IAE7B,gBAAeA,IAAgBE,EAXjC,uBAiBJ,6BACGS,EAAaM,KAAI,SAAAM,GAChB,IAAMC,EAAiBzB,EAAUC,EAGjC,OAAIuB,EAFmBC,EAAiBzB,GAEXwB,GAAQC,EAEjC,oBACE,UAAQ,OADV,wBAIWD,IAFJA,GAOJ,YCvGXlB,ECNC,SAAoBE,EAAckB,GAGvC,IAFA,IAAMC,EAAU,GAEPC,EAAIpB,EAAMoB,GAAKF,EAAIE,GAAK,EAC/BD,EAAQE,KAAKD,GAGf,OAAOD,EDDKG,CAAW,EAAG,IACzBZ,KAAI,SAAAU,GAAC,qBAAYA,MAEPG,EAAgB,WAC3B,MAA8BC,mBAAS,GAAvC,mBAAOhC,EAAP,KAAgBiC,EAAhB,KACA,EAAsCD,mBAAS,GAA/C,mBAAO/B,EAAP,KAAoBiC,EAApB,KAcA,OACE,sBAAKrB,UAAU,YAAf,UACE,uDAEA,mBAAGA,UAAU,OAAO,UAAQ,OAA5B,wBACWZ,EADX,aAhBgB,SAACkC,EAAsBC,GACzC,IAAIC,EAAmBD,EAAOD,EAQ9B,OANIE,EAAmB/B,EAAMG,SAC3B4B,EAAmB/B,EAAMG,QAKrB,SAAN,OAFyBR,EAAckC,EAAe,EAAInC,EAE1D,cAAsCqC,EAAtC,OAQ6BC,CAAYtC,EAASC,GADhD,YACgEK,EAAMG,OADtE,OAIA,sBAAKI,UAAU,iBAAf,UACE,qBAAKA,UAAU,0BAAf,SACE,yBACE,UAAQ,kBACR0B,GAAG,kBACH1B,UAAU,eACV2B,MAAOxC,EACPyC,SAAU,SAAApB,GACRY,GAAYZ,EAAEqB,OAAOF,OACrBN,EAAe,IAPnB,UAUE,wBAAQM,MAAM,IAAd,eACA,wBAAQA,MAAM,IAAd,eACA,wBAAQA,MAAM,KAAd,gBACA,wBAAQA,MAAM,KAAd,qBAIJ,uBAAOG,QAAQ,kBAAkB9B,UAAU,qBAA3C,+BAKF,cAAC,EAAD,CACEd,MAAOO,EAAMG,OACbT,QAASA,EACTC,YAAaA,EACbC,aAAcgC,QE1DtBU,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.c5969185.chunk.js","sourcesContent":["// import React from \"react\";\n\nimport classNames from 'classnames';\n\ntype Props = {\n  total: number;\n  perPage: number;\n  currentPage: number;\n  onPageChange: (page: number) => unknown;\n};\n\nexport const Pagination: React.FC<Props> = (\n  {\n    total, perPage, currentPage, onPageChange,\n  },\n) => {\n  const visiblePage = Math.ceil(total / perPage);\n  const items = Array.from({ length: visiblePage }, (_, index) => index + 1);\n  const visibleItems = Array.from({ length: total }, (_, index) => index + 1);\n\n  return (\n    <>\n      <ul className=\"pagination\">\n        <li\n          className={\n            classNames('page-item',\n              { disabled: currentPage === 1 })\n          }\n        >\n          <a\n            data-cy=\"prevLink\"\n            className=\"page-link\"\n            href=\"#prev\"\n            onClick={() => {\n              if (currentPage > 1) {\n                onPageChange(currentPage - 1);\n              }\n            }}\n            aria-disabled={currentPage === 1}\n          >\n            «\n          </a>\n        </li>\n\n        {items.map((elem) => {\n          return (\n            <li\n              className={\n                classNames(\n                  'page-item',\n                  { active: currentPage === elem },\n                )\n              }\n              key={elem}\n            >\n              <a\n                onClick={e => {\n                  onPageChange(+e.currentTarget.innerHTML);\n                }}\n                data-cy=\"pageLink\"\n                className=\"page-link\"\n                href={`#${elem}`}\n              >\n                {elem}\n              </a>\n            </li>\n          );\n        })}\n        <li\n          className={\n            classNames(\n              'page-item',\n              { disabled: currentPage === visiblePage },\n            )\n          }\n        >\n          <a\n            data-cy=\"nextLink\"\n            className=\"page-link\"\n            href=\"#next\"\n            onClick={() => {\n              if (currentPage === visiblePage) {\n                return;\n              }\n\n              onPageChange(currentPage + 1);\n            }}\n            aria-disabled={currentPage === visiblePage}\n          >\n            »\n          </a>\n        </li>\n      </ul>\n      <ul>\n        {visibleItems.map(item => {\n          const maxVisiblePage = perPage * currentPage;\n          const minVisiblePage = maxVisiblePage - perPage;\n\n          if (item > minVisiblePage && item <= maxVisiblePage) {\n            return (\n              <li\n                data-cy=\"item\"\n                key={item}\n              >\n                {`Item ${item}`}\n              </li>\n            );\n          }\n\n          return '';\n        })}\n      </ul>\n    </>\n  );\n};\n","import React, { useState } from 'react';\nimport './App.css';\nimport { getNumbers } from './utils';\nimport { Pagination } from './components/Pagination';\n\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst items = getNumbers(1, 42)\n  .map(n => `Item ${n}`);\n\nexport const App: React.FC = () => {\n  const [perPage, setPerPage] = useState(5);\n  const [currentPage, setCurrentPage] = useState(1);\n\n  const itemsPeriod = (perPageValue: number, page: number): string => {\n    let maxNumberOfPages = page * perPageValue;\n\n    if (maxNumberOfPages > items.length) {\n      maxNumberOfPages = items.length;\n    }\n\n    const minNumberOfPages = currentPage * perPageValue + 1 - perPage;\n\n    return `items ${minNumberOfPages} - ${maxNumberOfPages} of`;\n  };\n\n  return (\n    <div className=\"container\">\n      <h1>Items with Pagination</h1>\n\n      <p className=\"lead\" data-cy=\"info\">\n        {`Page ${currentPage} (${itemsPeriod(perPage, currentPage)} ${items.length})`}\n      </p>\n\n      <div className=\"form-group row\">\n        <div className=\"col-3 col-sm-2 col-xl-1\">\n          <select\n            data-cy=\"perPageSelector\"\n            id=\"perPageSelector\"\n            className=\"form-control\"\n            value={perPage}\n            onChange={e => {\n              setPerPage(+e.target.value);\n              setCurrentPage(1);\n            }}\n          >\n            <option value=\"3\">3</option>\n            <option value=\"5\">5</option>\n            <option value=\"10\">10</option>\n            <option value=\"20\">20</option>\n          </select>\n        </div>\n\n        <label htmlFor=\"perPageSelector\" className=\"col-form-label col\">\n          items per page\n        </label>\n      </div>\n\n      <Pagination\n        total={items.length}\n        perPage={perPage}\n        currentPage={currentPage}\n        onPageChange={setCurrentPage}\n      />\n\n    </div>\n  );\n};\n\nexport default App;\n","export function getNumbers(from: number, to: number): number[] {\n  const numbers = [];\n\n  for (let n = from; n <= to; n += 1) {\n    numbers.push(n);\n  }\n\n  return numbers;\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}